file(GLOB enet_SOURCES *.c)
set(ENET_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/include CACHE PATH "Path to enet includes")
include_directories(${ENET_INCLUDE_DIR})
add_library(enet STATIC ${enet_SOURCES})
set (HEADERS "sys/types.h;sys/socket.h;sys/ioctl.h;sys/time.h;arpa/inet.h;netinet/tcp.h;netdb.h")

macro(check_define SYMBOL_NAME DEF_NAME)
    check_symbol_exists("${SYMBOL_NAME}" "${HEADERS}" E)
    if (${E})
        add_definitions(-D${DEF_NAME}=1)
    endif()
endmacro()

check_define(getaddrinfo HAS_GETADDRINFO)
check_define(getnameinfo HAS_GETNAMEINFO)
check_define(gethostbyaddr_r HAS_GETHOSTBYADDR_R)
check_define(gethostbyname_r HAS_GETHOSTBYNAME_R)
check_define(poll HAS_POLL)
check_define(fcntl HAS_FCNTL)
check_define(inet_pton HAS_INET_PTON)
check_define(inet_ntop HAS_INET_NTOP)

include(CheckStructHasMember)
CHECK_STRUCT_HAS_MEMBER("struct msghdr" "msg_flags" "${HEADERS}" HAS_MSG_FLAGS)
if (${HAS_MSG_FLAGS})
    add_definitions(-DHAS_MSGHDR_FLAGS)
endif()
check_c_source_compiles("#include <sys/socket.h>\n#include <sys/types.h>\nint main() {socklen_t sl;}" SOCKLEN_T)
if (${SOCKLEN_T})
    add_definitions(-DHAS_SOCKLEN_T)
endif ()
